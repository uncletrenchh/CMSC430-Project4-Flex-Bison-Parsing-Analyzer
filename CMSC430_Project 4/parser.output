State 8 conflicts: 1 reduce/reduce
State 41 conflicts: 1 shift/reduce
State 50 conflicts: 2 shift/reduce
State 51 conflicts: 2 reduce/reduce
State 63 conflicts: 2 shift/reduce
State 110 conflicts: 1 shift/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';'

    3 type: REAL
    4     | INTEGER
    5     | CHARACTER

    6 optional_variable: variable
    7                  | variable optional_variable
    8                  | ε

    9 variable: IDENTIFIER ':' type IS statement ';'
   10         | IDENTIFIER ':' LIST OF type IS list ';'

   11 list: '(' expressions ')'

   12 expressions: expressions ',' expression
   13            | expression ',' expression ',' expression
   14            | primary
   15            | expression

   16 body: BEGIN_ statement_ END ';'

   17 statement_: statement ';'
   18           | error ';'

   19 statement: expression
   20          | FOLD LEFT ADDOP expression ENDFOLD
   21          | WHEN condition ',' expression ':' expression
   22          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH
   23          | IF condition elsif ENDIF

   24 cases: cases case
   25      | ε

   26 case: CASE INT_LITERAL ARROW statement ';'

   27 elsif: elsifs elsif
   28      | ε

   29 elsifs: THEN statement_
   30       | ELSE statement_
   31       | ELSIF condition THEN statement_

   32 condition: condition ANDOP relation
   33          | relation

   34 relation: '(' condition ')'
   35         | expression RELOP expression

   36 expression: NOTOP expression
   37           | expression ADDOP term
   38           | '(' expressions ')'
   39           | term

   40 term: term REMOP primary
   41     | term EXPOP primary
   42     | term MULOP primary
   43     | primary

   44 primary: '(' expression ')'
   45        | INT_LITERAL
   46        | REAL_LITERAL
   47        | CHAR_LITERAL
   48        | IDENTIFIER '(' expression ')'
   49        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 11 34 38 44 48
    ')' (41) 11 34 38 44 48
    ',' (44) 12 13 21
    ':' (58) 9 10 21
    ';' (59) 2 9 10 16 17 18 22 26
    error (256) 18
    IDENTIFIER <iden> (258) 2 9 10 48 49
    INT_LITERAL <type> (259) 26 45
    CHAR_LITERAL <type> (260) 47
    REAL_LITERAL <type> (261) 46
    ADDOP (262) 20 37
    MULOP (263) 42
    RELOP (264) 35
    ANDOP (265) 32
    ARROW (266) 22 26
    EXPOP (267) 41
    NOTOP (268) 36
    REMOP (269) 40
    BEGIN_ (270) 16
    CASE (271) 26
    CHARACTER (272) 5
    ELSE (273) 30
    END (274) 16
    ENDSWITCH (275) 22
    FUNCTION (276) 2
    INTEGER (277) 4
    IS (278) 9 10 22
    LIST (279) 10
    OF (280) 10
    OTHERS (281) 22
    RETURNS (282) 2
    SWITCH (283) 22
    WHEN (284) 21
    REAL (285) 3
    IF (286) 23
    ELSIF (287) 31
    THEN (288) 29 31
    ENDIF (289) 23
    LEFT (290) 20
    FOLD (291) 20
    ENDFOLD (292) 20


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    function (44)
        on left: 1
        on right: 0
    function_header (45)
        on left: 2
        on right: 1
    type <type> (46)
        on left: 3 4 5
        on right: 2 9 10
    optional_variable (47)
        on left: 6 7 8
        on right: 1 7
    variable (48)
        on left: 9 10
        on right: 6 7
    list <type> (49)
        on left: 11
        on right: 10
    expressions <type> (50)
        on left: 12 13 14 15
        on right: 11 12 38
    body <type> (51)
        on left: 16
        on right: 1
    statement_ <type> (52)
        on left: 17 18
        on right: 16 29 30 31
    statement <type> (53)
        on left: 19 20 21 22 23
        on right: 9 17 22 26
    cases <type> (54)
        on left: 24 25
        on right: 22 24
    case <type> (55)
        on left: 26
        on right: 24
    elsif (56)
        on left: 27 28
        on right: 23 27
    elsifs <type> (57)
        on left: 29 30 31
        on right: 27
    condition <type> (58)
        on left: 32 33
        on right: 21 23 31 32 34
    relation <type> (59)
        on left: 34 35
        on right: 32 33
    expression <type> (60)
        on left: 36 37 38 39
        on right: 12 13 15 19 20 21 22 35 36 37 44 48
    term <type> (61)
        on left: 40 41 42 43
        on right: 37 39 40 41 42
    primary <type> (62)
        on left: 44 45 46 47 48 49
        on right: 14 40 41 42 43


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 8 (optional_variable)

    optional_variable  go to state 7
    variable           go to state 8


State 4

    2 function_header: FUNCTION IDENTIFIER • RETURNS type ';'

    RETURNS  shift, and go to state 9


State 5

    0 $accept: function $end •

    $default  accept


State 6

    9 variable: IDENTIFIER • ':' type IS statement ';'
   10         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 10


State 7

    1 function: function_header optional_variable • body

    BEGIN_  shift, and go to state 11

    body  go to state 12


State 8

    6 optional_variable: variable •
    7                  | variable • optional_variable

    IDENTIFIER  shift, and go to state 6

    BEGIN_    reduce using rule 6 (optional_variable)
    BEGIN_    [reduce using rule 8 (optional_variable)]
    $default  reduce using rule 6 (optional_variable)

    optional_variable  go to state 13
    variable           go to state 8


State 9

    2 function_header: FUNCTION IDENTIFIER RETURNS • type ';'

    CHARACTER  shift, and go to state 14
    INTEGER    shift, and go to state 15
    REAL       shift, and go to state 16

    type  go to state 17


State 10

    9 variable: IDENTIFIER ':' • type IS statement ';'
   10         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 14
    INTEGER    shift, and go to state 15
    LIST       shift, and go to state 18
    REAL       shift, and go to state 16

    type  go to state 19


State 11

   16 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    IF            shift, and go to state 28
    FOLD          shift, and go to state 29
    '('           shift, and go to state 30

    statement_  go to state 31
    statement   go to state 32
    expression  go to state 33
    term        go to state 34
    primary     go to state 35


State 12

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 13

    7 optional_variable: variable optional_variable •

    $default  reduce using rule 7 (optional_variable)


State 14

    5 type: CHARACTER •

    $default  reduce using rule 5 (type)


State 15

    4 type: INTEGER •

    $default  reduce using rule 4 (type)


State 16

    3 type: REAL •

    $default  reduce using rule 3 (type)


State 17

    2 function_header: FUNCTION IDENTIFIER RETURNS type • ';'

    ';'  shift, and go to state 36


State 18

   10 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 37


State 19

    9 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 38


State 20

   18 statement_: error • ';'

    ';'  shift, and go to state 39


State 21

   48 primary: IDENTIFIER • '(' expression ')'
   49        | IDENTIFIER •

    '('  shift, and go to state 40

    $default  reduce using rule 49 (primary)


State 22

   45 primary: INT_LITERAL •

    $default  reduce using rule 45 (primary)


State 23

   47 primary: CHAR_LITERAL •

    $default  reduce using rule 47 (primary)


State 24

   46 primary: REAL_LITERAL •

    $default  reduce using rule 46 (primary)


State 25

   36 expression: NOTOP • expression

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression  go to state 41
    term        go to state 34
    primary     go to state 35


State 26

   22 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression  go to state 42
    term        go to state 34
    primary     go to state 35


State 27

   21 statement: WHEN • condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 43

    condition   go to state 44
    relation    go to state 45
    expression  go to state 46
    term        go to state 34
    primary     go to state 35


State 28

   23 statement: IF • condition elsif ENDIF

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 43

    condition   go to state 47
    relation    go to state 45
    expression  go to state 46
    term        go to state 34
    primary     go to state 35


State 29

   20 statement: FOLD • LEFT ADDOP expression ENDFOLD

    LEFT  shift, and go to state 48


State 30

   38 expression: '(' • expressions ')'
   44 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expressions  go to state 49
    expression   go to state 50
    term         go to state 34
    primary      go to state 51


State 31

   16 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 52


State 32

   17 statement_: statement • ';'

    ';'  shift, and go to state 53


State 33

   19 statement: expression •
   37 expression: expression • ADDOP term

    ADDOP  shift, and go to state 54

    $default  reduce using rule 19 (statement)


State 34

   39 expression: term •
   40 term: term • REMOP primary
   41     | term • EXPOP primary
   42     | term • MULOP primary

    MULOP  shift, and go to state 55
    EXPOP  shift, and go to state 56
    REMOP  shift, and go to state 57

    $default  reduce using rule 39 (expression)


State 35

   43 term: primary •

    $default  reduce using rule 43 (term)


State 36

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 37

   10 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 14
    INTEGER    shift, and go to state 15
    REAL       shift, and go to state 16

    type  go to state 58


State 38

    9 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    IF            shift, and go to state 28
    FOLD          shift, and go to state 29
    '('           shift, and go to state 30

    statement   go to state 59
    expression  go to state 33
    term        go to state 34
    primary     go to state 35


State 39

   18 statement_: error ';' •

    $default  reduce using rule 18 (statement_)


State 40

   48 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression  go to state 60
    term        go to state 34
    primary     go to state 35


State 41

   36 expression: NOTOP expression •
   37           | expression • ADDOP term

    ADDOP  shift, and go to state 54

    ADDOP     [reduce using rule 36 (expression)]
    $default  reduce using rule 36 (expression)


State 42

   22 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   37 expression: expression • ADDOP term

    ADDOP  shift, and go to state 54
    IS     shift, and go to state 61


State 43

   34 relation: '(' • condition ')'
   38 expression: '(' • expressions ')'
   44 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 43

    expressions  go to state 49
    condition    go to state 62
    relation     go to state 45
    expression   go to state 63
    term         go to state 34
    primary      go to state 51


State 44

   21 statement: WHEN condition • ',' expression ':' expression
   32 condition: condition • ANDOP relation

    ANDOP  shift, and go to state 64
    ','    shift, and go to state 65


State 45

   33 condition: relation •

    $default  reduce using rule 33 (condition)


State 46

   35 relation: expression • RELOP expression
   37 expression: expression • ADDOP term

    ADDOP  shift, and go to state 54
    RELOP  shift, and go to state 66


State 47

   23 statement: IF condition • elsif ENDIF
   32 condition: condition • ANDOP relation

    ANDOP  shift, and go to state 64
    ELSE   shift, and go to state 67
    ELSIF  shift, and go to state 68
    THEN   shift, and go to state 69

    $default  reduce using rule 28 (elsif)

    elsif   go to state 70
    elsifs  go to state 71


State 48

   20 statement: FOLD LEFT • ADDOP expression ENDFOLD

    ADDOP  shift, and go to state 72


State 49

   12 expressions: expressions • ',' expression
   38 expression: '(' expressions • ')'

    ')'  shift, and go to state 73
    ','  shift, and go to state 74


State 50

   13 expressions: expression • ',' expression ',' expression
   15            | expression •
   37 expression: expression • ADDOP term
   44 primary: '(' expression • ')'

    ADDOP  shift, and go to state 54
    ')'    shift, and go to state 75
    ','    shift, and go to state 76

    ')'  [reduce using rule 15 (expressions)]
    ','  [reduce using rule 15 (expressions)]


State 51

   14 expressions: primary •
   43 term: primary •

    ')'       reduce using rule 14 (expressions)
    ')'       [reduce using rule 43 (term)]
    ','       reduce using rule 14 (expressions)
    ','       [reduce using rule 43 (term)]
    $default  reduce using rule 43 (term)


State 52

   16 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 77


State 53

   17 statement_: statement ';' •

    $default  reduce using rule 17 (statement_)


State 54

   37 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    '('           shift, and go to state 78

    term     go to state 79
    primary  go to state 35


State 55

   42 term: term MULOP • primary

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    '('           shift, and go to state 78

    primary  go to state 80


State 56

   41 term: term EXPOP • primary

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    '('           shift, and go to state 78

    primary  go to state 81


State 57

   40 term: term REMOP • primary

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    '('           shift, and go to state 78

    primary  go to state 82


State 58

   10 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 83


State 59

    9 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 84


State 60

   37 expression: expression • ADDOP term
   48 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 54
    ')'    shift, and go to state 85


State 61

   22 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 25 (cases)

    cases  go to state 86


State 62

   32 condition: condition • ANDOP relation
   34 relation: '(' condition • ')'

    ANDOP  shift, and go to state 64
    ')'    shift, and go to state 87


State 63

   13 expressions: expression • ',' expression ',' expression
   15            | expression •
   35 relation: expression • RELOP expression
   37 expression: expression • ADDOP term
   44 primary: '(' expression • ')'

    ADDOP  shift, and go to state 54
    RELOP  shift, and go to state 66
    ')'    shift, and go to state 75
    ','    shift, and go to state 76

    ')'  [reduce using rule 15 (expressions)]
    ','  [reduce using rule 15 (expressions)]


State 64

   32 condition: condition ANDOP • relation

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 43

    relation    go to state 88
    expression  go to state 46
    term        go to state 34
    primary     go to state 35


State 65

   21 statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression  go to state 89
    term        go to state 34
    primary     go to state 35


State 66

   35 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression  go to state 90
    term        go to state 34
    primary     go to state 35


State 67

   30 elsifs: ELSE • statement_

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    IF            shift, and go to state 28
    FOLD          shift, and go to state 29
    '('           shift, and go to state 30

    statement_  go to state 91
    statement   go to state 32
    expression  go to state 33
    term        go to state 34
    primary     go to state 35


State 68

   31 elsifs: ELSIF • condition THEN statement_

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 43

    condition   go to state 92
    relation    go to state 45
    expression  go to state 46
    term        go to state 34
    primary     go to state 35


State 69

   29 elsifs: THEN • statement_

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    IF            shift, and go to state 28
    FOLD          shift, and go to state 29
    '('           shift, and go to state 30

    statement_  go to state 93
    statement   go to state 32
    expression  go to state 33
    term        go to state 34
    primary     go to state 35


State 70

   23 statement: IF condition elsif • ENDIF

    ENDIF  shift, and go to state 94


State 71

   27 elsif: elsifs • elsif

    ELSE   shift, and go to state 67
    ELSIF  shift, and go to state 68
    THEN   shift, and go to state 69

    $default  reduce using rule 28 (elsif)

    elsif   go to state 95
    elsifs  go to state 71


State 72

   20 statement: FOLD LEFT ADDOP • expression ENDFOLD

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression  go to state 96
    term        go to state 34
    primary     go to state 35


State 73

   38 expression: '(' expressions ')' •

    $default  reduce using rule 38 (expression)


State 74

   12 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression  go to state 97
    term        go to state 34
    primary     go to state 35


State 75

   44 primary: '(' expression ')' •

    $default  reduce using rule 44 (primary)


State 76

   13 expressions: expression ',' • expression ',' expression

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression  go to state 98
    term        go to state 34
    primary     go to state 35


State 77

   16 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 16 (body)


State 78

   44 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression  go to state 99
    term        go to state 34
    primary     go to state 35


State 79

   37 expression: expression ADDOP term •
   40 term: term • REMOP primary
   41     | term • EXPOP primary
   42     | term • MULOP primary

    MULOP  shift, and go to state 55
    EXPOP  shift, and go to state 56
    REMOP  shift, and go to state 57

    $default  reduce using rule 37 (expression)


State 80

   42 term: term MULOP primary •

    $default  reduce using rule 42 (term)


State 81

   41 term: term EXPOP primary •

    $default  reduce using rule 41 (term)


State 82

   40 term: term REMOP primary •

    $default  reduce using rule 40 (term)


State 83

   10 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 100

    list  go to state 101


State 84

    9 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 9 (variable)


State 85

   48 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 48 (primary)


State 86

   22 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   24 cases: cases • case

    CASE    shift, and go to state 102
    OTHERS  shift, and go to state 103

    case  go to state 104


State 87

   34 relation: '(' condition ')' •

    $default  reduce using rule 34 (relation)


State 88

   32 condition: condition ANDOP relation •

    $default  reduce using rule 32 (condition)


State 89

   21 statement: WHEN condition ',' expression • ':' expression
   37 expression: expression • ADDOP term

    ADDOP  shift, and go to state 54
    ':'    shift, and go to state 105


State 90

   35 relation: expression RELOP expression •
   37 expression: expression • ADDOP term

    ADDOP  shift, and go to state 54

    $default  reduce using rule 35 (relation)


State 91

   30 elsifs: ELSE statement_ •

    $default  reduce using rule 30 (elsifs)


State 92

   31 elsifs: ELSIF condition • THEN statement_
   32 condition: condition • ANDOP relation

    ANDOP  shift, and go to state 64
    THEN   shift, and go to state 106


State 93

   29 elsifs: THEN statement_ •

    $default  reduce using rule 29 (elsifs)


State 94

   23 statement: IF condition elsif ENDIF •

    $default  reduce using rule 23 (statement)


State 95

   27 elsif: elsifs elsif •

    $default  reduce using rule 27 (elsif)


State 96

   20 statement: FOLD LEFT ADDOP expression • ENDFOLD
   37 expression: expression • ADDOP term

    ADDOP    shift, and go to state 54
    ENDFOLD  shift, and go to state 107


State 97

   12 expressions: expressions ',' expression •
   37 expression: expression • ADDOP term

    ADDOP  shift, and go to state 54

    $default  reduce using rule 12 (expressions)


State 98

   13 expressions: expression ',' expression • ',' expression
   37 expression: expression • ADDOP term

    ADDOP  shift, and go to state 54
    ','    shift, and go to state 108


State 99

   37 expression: expression • ADDOP term
   44 primary: '(' expression • ')'

    ADDOP  shift, and go to state 54
    ')'    shift, and go to state 75


State 100

   11 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expressions  go to state 109
    expression   go to state 110
    term         go to state 34
    primary      go to state 51


State 101

   10 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 111


State 102

   26 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 112


State 103

   22 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 113


State 104

   24 cases: cases case •

    $default  reduce using rule 24 (cases)


State 105

   21 statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression  go to state 114
    term        go to state 34
    primary     go to state 35


State 106

   31 elsifs: ELSIF condition THEN • statement_

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    IF            shift, and go to state 28
    FOLD          shift, and go to state 29
    '('           shift, and go to state 30

    statement_  go to state 115
    statement   go to state 32
    expression  go to state 33
    term        go to state 34
    primary     go to state 35


State 107

   20 statement: FOLD LEFT ADDOP expression ENDFOLD •

    $default  reduce using rule 20 (statement)


State 108

   13 expressions: expression ',' expression ',' • expression

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression  go to state 116
    term        go to state 34
    primary     go to state 35


State 109

   11 list: '(' expressions • ')'
   12 expressions: expressions • ',' expression

    ')'  shift, and go to state 117
    ','  shift, and go to state 74


State 110

   13 expressions: expression • ',' expression ',' expression
   15            | expression •
   37 expression: expression • ADDOP term

    ADDOP  shift, and go to state 54
    ','    shift, and go to state 76

    ','       [reduce using rule 15 (expressions)]
    $default  reduce using rule 15 (expressions)


State 111

   10 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 10 (variable)


State 112

   26 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 118


State 113

   22 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    IF            shift, and go to state 28
    FOLD          shift, and go to state 29
    '('           shift, and go to state 30

    statement   go to state 119
    expression  go to state 33
    term        go to state 34
    primary     go to state 35


State 114

   21 statement: WHEN condition ',' expression ':' expression •
   37 expression: expression • ADDOP term

    ADDOP  shift, and go to state 54

    $default  reduce using rule 21 (statement)


State 115

   31 elsifs: ELSIF condition THEN statement_ •

    $default  reduce using rule 31 (elsifs)


State 116

   13 expressions: expression ',' expression ',' expression •
   37 expression: expression • ADDOP term

    ADDOP  shift, and go to state 54

    $default  reduce using rule 13 (expressions)


State 117

   11 list: '(' expressions ')' •

    $default  reduce using rule 11 (list)


State 118

   26 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    CHAR_LITERAL  shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    IF            shift, and go to state 28
    FOLD          shift, and go to state 29
    '('           shift, and go to state 30

    statement   go to state 120
    expression  go to state 33
    term        go to state 34
    primary     go to state 35


State 119

   22 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 121


State 120

   26 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 122


State 121

   22 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 123


State 122

   26 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 26 (case)


State 123

   22 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 22 (statement)
